#!/bin/sh
#
# carbon-c-relay Carbon-like graphite line mode relay
#
# chkconfig: - 20 80
# description: Enhanced C implementation of Carbon relay, \
#              aggregator and rewriter

### BEGIN INIT INFO
# Provides:          carbon-c-relay
# Required-Start:    $local_fs $network $remote_fs $syslog
# Required-Stop:     $local_fs $network $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Enhanced C implementation of Carbon relay, aggregator and rewriter
# Description:       Carbon-like graphite line mode relay.
#                    This project aims to be a replacement of the original Carbon relay
### END INIT INFO

# Author: Fabian Groffen
# Author: Jose Riguera <jriguera@gmail.com>

# Do NOT "set -e"

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Graphite Carbon Relay"
NAME="carbon-c-relay-<%= @name %>"
DAEMON=/usr/sbin/carbon-c-relay
CONFIG=/etc/carbon/$NAME.conf
OPTS="-f $CONFIG"
PIDFILE=/var/run/$NAME.pid
LOCKFILE=/var/lock/subsys/$NAME
SCRIPTNAME=/etc/init.d/$NAME
DAEMON_USER="carbon"
DISABLE=1

# Define LSB log_* functions.
. /etc/rc.d/init.d/functions

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 5

# Read configuration variable file if it is present
[ -e /etc/sysconfig/$NAME ] && . /etc/sysconfig/$NAME || exit 6

[ "$DISABLE" = "0" ] || exit 0

#
# Function that starts the daemon/service
#
do_start() {
    local pid
  
    (
        {
            su - $DAEMON_USER -s /bin/sh && exec $DAEMON $OPTS 2>&1;
        } > /dev/null
    ) &
    pid=$!
    sleep 5

    if ps -p $pid >/dev/null 2>&1; then
        echo $pid > $PIDFILE
        touch $LOCKFILE
        return 0
    else
        return 1
    fi
}

#
# Function that stops the daemon/service
#
do_stop()
{
        killproc -p $PIDFILE -d 10 $DAEMON
        RETVAL="$?"
        [ "$RETVAL" = 0 ] && rm -f $LOCKFILE $FIDFILE
        return "$RETVAL"
}


case "$1" in
  start)
	[ "$VERBOSE" != no ] && echo -n "Starting $DESC $NAME"
	do_start && echo_success || echo_failure
        echo
	;;
  stop)
	[ "$VERBOSE" != no ] && echo -n "Stopping $DESC $NAME"
	do_stop  && echo_success || echo_failure
        echo
	;;
  status)
        status "$DAEMON" && echo_success || echo_failure
        echo
	;;
  restart|force-reload)
	echo "Restarting $DESC $NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start && echo_success || echo_failure
		;;
	  *)
                echo_failure
		;;
	esac
        echo
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
	exit 3
	;;
esac
